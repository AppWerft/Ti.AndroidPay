/**
 * This file was auto-generated by the Titanium Module SDK helper for Android
 * Appcelerator Titanium Mobile
 * Copyright (c) 2009-2010 by Appcelerator, Inc. All Rights Reserved.
 * Licensed under the terms of the Apache Public License
 * Please see the LICENSE included with this distribution for details.
 *
 */
package ti.androidpay;

// https://github.com/AuthorizeNet/accept-sample-android/blob/master/app/src/main/java/net/authorize/acceptsdk/sampleapp/androidpay/WalletUtil.java

import org.appcelerator.kroll.KrollDict;
import org.appcelerator.kroll.KrollFunction;
import org.appcelerator.kroll.KrollModule;
import org.appcelerator.kroll.annotations.Kroll;
import org.appcelerator.titanium.TiApplication;
import org.appcelerator.titanium.TiC;
import org.appcelerator.titanium.util.TiActivityResultHandler;
import org.appcelerator.kroll.common.Log;
import org.appcelerator.kroll.common.TiConfig;

import android.app.Activity;
import android.content.Intent;
import android.os.Bundle;

import com.google.android.gms.common.ConnectionResult;
import com.google.android.gms.common.api.BooleanResult;
import com.google.android.gms.common.api.GoogleApiClient;
import com.google.android.gms.common.api.ResultCallback;
import com.google.android.gms.wallet.Wallet;
import com.google.android.gms.wallet.Cart;
import com.google.android.gms.wallet.FullWalletRequest;
import com.google.android.gms.wallet.LineItem;
import com.google.android.gms.wallet.MaskedWalletRequest;
import com.google.android.gms.wallet.NotifyTransactionStatusRequest;
import com.google.android.gms.wallet.PaymentMethodTokenizationParameters;

import java.math.BigDecimal;
import java.math.RoundingMode;

@Kroll.module(name = "Androidpayment", id = "ti.androidpay")
public class AndroidpaymentModule extends KrollModule
		implements
		TiActivityResultHandler,
		com.google.android.gms.common.api.GoogleApiClient.ConnectionCallbacks,
		com.google.android.gms.common.api.GoogleApiClient.OnConnectionFailedListener {

	// Standard Debugging variables
	public static final String LCAT = "AndroidpayMod ";
	

	// You can define constants with @Kroll.constant, for example:
	@Kroll.constant
	public static final int ROLE_SHIPPING = LineItem.Role.SHIPPING;
	public static final int ROLE_REGULAR = LineItem.Role.REGULAR;
	public static final int ROLE_TAX = LineItem.Role.TAX;

	private static GoogleApiClient googleApiClient;
	KrollFunction onLoadCallback;

	public AndroidpaymentModule() {
		super();
	}

	@Kroll.onAppCreate
	public static void onAppCreate(TiApplication app) {
		Log.d(LCAT, "inside onAppCreate");
		// put module init code that needs to run when the application is
		// created
	}

	// Methods
	@Kroll.method
	public void isReadyToPay(KrollDict opts) {
		if (opts.containsKeyAndNotNull(TiC.PROPERTY_ONLOAD)) {
			onLoadCallback = (KrollFunction) opts.get(TiC.PROPERTY_ONLOAD);
		}
		GoogleApiClient googleApiClient = new GoogleApiClient.Builder(
				TiApplication.getAppCurrentActivity()).build();
		Wallet.Payments.isReadyToPay(googleApiClient).setResultCallback(
				new ResultCallback<BooleanResult>() {
					public void onResult(BooleanResult booleanResult) {
						if (booleanResult.getStatus().isSuccess()) {
							if (booleanResult.getValue()) {
								// Show Android Pay buttons alongside regular
								// checkout button
								// ...
							} else {
								// Hide Android Pay buttons, show a message that
								// Android Pay
								// cannot be used yet, and display a traditional
								// checkout button
								// ...
							}
						} else {
							// Error making isReadyToPay call
							Log.e(LCAT,
									"isReadyToPay:" + booleanResult.getStatus());
						}
					}
				});

	}

	// Properties
	@Kroll.getProperty
	public String getExampleProp() {
		Log.d(LCAT, "get example property");
		return "hello world";
	}

	@Kroll.setProperty
	public void setExampleProp(String value) {
		Log.d(LCAT, "set example property: " + value);
	}

	@Override
	public void onConnectionFailed(ConnectionResult arg0) {
		// TODO Auto-generated method stub

	}

	@Override
	public void onConnected(Bundle arg0) {
		// TODO Auto-generated method stub

	}

	@Override
	public void onConnectionSuspended(int arg0) {
		// TODO Auto-generated method stub

	}

	@Override
	public void onError(Activity arg0, int arg1, Exception arg2) {
		// TODO Auto-generated method stub

	}

	@Override
	public void onResult(Activity arg0, int arg1, int arg2, Intent arg3) {
		// TODO Auto-generated method stub

	}

	@Override
	public void onStop(Activity activity) {
		super.onStop(activity);
		if (googleApiClient != null && googleApiClient.isConnected()) {
			Log.d(LCAT, "On stop and disconnecting");
			googleApiClient.disconnect();
		}
	}

}
